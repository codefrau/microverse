"use strict";(globalThis.webpackChunk_croquet_microverse=globalThis.webpackChunk_croquet_microverse||[]).push([[92],{7092:(t,e,i)=>{i.r(e),i.d(e,{default:()=>n});const n={modules:[{name:"Spin",actorBehaviors:[class SpinActor{setup(){this.listen("startSpinning","startSpinning"),this.listen("stopSpinning","stopSpinning"),this.listen("newAngle","newAngle")}startSpinning(t){this.isSpinning=!0,this.qSpin=Worldcore.q_euler(0,t,0),this.doSpin()}doSpin(){this.isSpinning&&(this.setRotation(Worldcore.q_multiply(this._rotation,this.qSpin)),this.future(50).doSpin())}stopSpinning(){this.isSpinning=!1}newAngle(t){this.publish("scope","newAngle",t)}teardown(){delete this.isSpinning,this.unsubscribe(this.id,"startSpinning"),this.unsubscribe(this.id,"stopSpinning"),this.unsubscribe(this.id,"newAngle")}}],pawnBehaviors:[class SpinPawn{setup(){this.addEventListener("pointerDown","onPointerDown"),this.addEventListener("pointerUp","onPointerUp"),this.addEventListener("pointerMove","onPointerMove")}theta(t){var e=this.translation;return(Math.atan2(e[2]-t[2],t[0]-e[0])+2*Math.PI)%(2*Math.PI)}onPointerDown(t){this.moveBuffer=[],this.say("stopSpinning"),this._startDrag=t.xy,this._baseRotation=this._rotation;let e=Worldcore.GetPawn(t.avatarId);e.addFirstResponder("pointerMove",{},this)}onPointerMove(t){this.moveBuffer.push(t.xy),this.deltaAngle=(t.xy[0]-this._startDrag[0])/2/180*Math.PI;t=Worldcore.q_multiply(this._baseRotation,Worldcore.q_euler(0,this.deltaAngle,0));this.rotateTo(t),this.say("newAngle",this.deltaAngle),3<=this.moveBuffer.length&&setTimeout(()=>this.shiftMoveBuffer(),100)}shiftMoveBuffer(){this.moveBuffer.shift()}onPointerUp(t){let e=Worldcore.GetPawn(t.avatarId);if(e.removeFirstResponder("pointerMove",{},this),this.moveBuffer.push(t.xy),this._startDrag=null,this._baseRotation=null,!(this.moveBuffer.length<3)){this.moveBuffer=this.moveBuffer.slice(this.moveBuffer.length-3);let e=new Set;for(let t=0;t<this.moveBuffer.length-1;t++)e.add(Math.sign(this.moveBuffer[t+1][0]-this.moveBuffer[t][0]));e.has(-1)&&e.has(1)||(this.deltaAngle=(this.moveBuffer[this.moveBuffer.length-1][0]-this.moveBuffer[0][0])/2/180*Math.PI,.01<Math.abs(this.deltaAngle)&&(t=this.deltaAngle,t=Math.min(Math.max(-.1,t),.1),this.say("startSpinning",t)))}}teardown(){this.removeEventListener("pointerDown","onPointerDown"),this.removeEventListener("pointerUp","onPointerUp"),this.removeEventListener("pointerMove","onPointerMove")}}]}]}}}]);