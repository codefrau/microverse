"use strict";(globalThis.webpackChunk_croquet_microverse=globalThis.webpackChunk_croquet_microverse||[]).push([[619],{619:(e,t,i)=>{i.r(t),i.d(t,{default:()=>s});const s={modules:[{name:"Elected",actorBehaviors:[class ElectedActor{setup(){this.views||(this.views=new Set),this.subscribe(this.sessionId,"view-join","viewJoined"),this.subscribe(this.sessionId,"view-exit","viewExited")}electedView(){for(const e of this.views)return e}viewJoined(e){this.publishViewElectedAfter(()=>this.views.add(e))}viewExited(e){this.publishViewElectedAfter(()=>this.views.delete(e))}publishViewElectedAfter(e){var t=this.electedView(),e=(e(),this.electedView());t!==e&&this.say("view-elected",e)}}],pawnBehaviors:[class ElectedPawn{setup(){void 0===this.electedViewId&&(this.electedViewId="",this.onViewElected(this.actorCall("ElectedActor","electedView"))),this.listen({event:"view-elected",handling:"oncePerFrame"},"onViewElected"),this.listen("handleElected","handleElected"),this.listen("handleUnelected","handleUnelected"),this.listen("electionStatusRequested","electionStatusRequested")}isElected(){return this.viewId===this.electedViewId}electionStatusRequested(){this.isElected()&&this.say("handleElected")}onViewElected(e){var t=this.isElected();this.electedViewId=e,t!==this.isElected()?t?this.say("handleUnelected",{from:this.electedViewId,to:e}):this.say("handleElected",{from:this.electedViewId,to:e}):console.log("%cView Elected: %s (this view %s %s)","color: #CC0",this.electedViewId||"<none>",this.viewId,t?"still elected ✅":"unaffected ❌")}handleElected(){console.log("%cView Elected: %s (this view %s elected ✅)","color: #0C0",this.electedViewId||"<none>",this.viewId)}handleUnelected(){console.log("%cView Elected: %s (this view %s unelected ❌)","color: #C00",this.electedViewId||"<none>",this.viewId)}teardown(){this.onViewElected("")}}]}]}}}]);